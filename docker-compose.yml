version: "3"
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "nginx-certs:/etc/nginx/certs:ro"
      - "nginx:/etc/nginx/vhost.d"
      - "nginx:/usr/share/nginx/html"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  nginx-proxy-letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "nginx-certs:/etc/nginx/certs:rw"
      - "nginx:/etc/nginx/vhost.d"
      - "nginx:/usr/share/nginx/html"

  keeweb:
    build: ./keeweb
    restart: always
    environment:
      LETSENCRYPT_EMAIL: "hadrien@decuzey.fr"
      LETSENCRYPT_HOST: "keeweb.chadrien.fr"
      VIRTUAL_HOST: "keeweb.chadrien.fr"

  wedding-http:
    build: ./wedding-http
    links:
      - wedding-db
    volumes:
      - "secrets:/secrets:ro"
    environment:
      BUNDLE_APP_CONFIG: /app/.bundle
      VIRTUAL_HOST: "on-s-ai.me"
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: "on-s-ai.me"
      LETSENCRYPT_EMAIL: "hadrien@decuzey.fr"
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: 1

  wedding-db:
    build: ./wedding-db
    volumes:
      - "secrets:/secrets:ro"
      - "wedding-db:/var/lib/mysql"

volumes:
  secrets:
  nginx:
  nginx-certs:
  wedding-db: